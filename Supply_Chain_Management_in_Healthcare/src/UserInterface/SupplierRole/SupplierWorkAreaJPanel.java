/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SupplierRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Inventory.HospitalInventory;
import Business.SupplierEnterprise.Organization.SupplierOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Krina Thakkar
 */
public class SupplierWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private SupplierOrganization supplierOrganization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private HospitalInventory catDir;
    private WorkRequest request;
    private EcoSystem business;

    /**
     * Creates new form SupplierWorkAreaJPanel
     */

    public SupplierWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, SupplierOrganization organization, Enterprise enterprise,EcoSystem business, HospitalInventory catDir) {
        initComponents();
        this.business = business;
        this.userProcessContainer = userProcessContainer;
        this.supplierOrganization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.catDir = catDir;
        valueLabel.setText(enterprise.getEnterpriseType() + "-" + enterprise.getName());
        nameLabel.setText(userAccount.getUsername());
        populateOrderTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        manageOrderBtn = new javax.swing.JButton();
        shipOrderBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        supplierWorkRequestJTable = new javax.swing.JTable();
        nameLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        manageOrderBtn.setText("Manage Order");
        manageOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageOrderBtnActionPerformed(evt);
            }
        });
        add(manageOrderBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 460, 120, -1));

        shipOrderBtn.setText("Ship Order");
        shipOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shipOrderBtnActionPerformed(evt);
            }
        });
        add(shipOrderBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 460, 100, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Orders from Procurement Staff");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 220, 300, 30));


        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/SupplierRole/images/supplier.png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 80, 200, 200));

        supplierWorkRequestJTable.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(204, 204, 204)));
        supplierWorkRequestJTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        supplierWorkRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Quantity", "Priority", "Sender", "Assign", "Status", "Request date", "Resolve date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        supplierWorkRequestJTable.setRowHeight(25);
        supplierWorkRequestJTable.setRowMargin(5);
        supplierWorkRequestJTable.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jScrollPane2.setViewportView(supplierWorkRequestJTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 626, 137));

        nameLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        nameLabel.setText("<Name Label>");
    }// </editor-fold>//GEN-END:initComponents

    private void shipOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shipOrderBtnActionPerformed
        int selectedRow = supplierWorkRequestJTable.getSelectedRow();
        if (selectedRow >= 0) {
            WorkRequest request = (WorkRequest) supplierWorkRequestJTable.getValueAt(selectedRow, 0);
            if (request.getStatus().equalsIgnoreCase("Completed")) {
                JOptionPane.showMessageDialog(null, "Request Already Processed");
                return;
            } else {
                request.setReceiver(userAccount);
                request.setStatus("With Supplier");
                populateOrderTable();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Choose a request to process");
            return;
        }
    }//GEN-LAST:event_shipOrderBtnActionPerformed

    private void manageOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageOrderBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = supplierWorkRequestJTable.getSelectedRow();
        if (selectedRow >= 0) {
            request = (WorkRequest) supplierWorkRequestJTable.getValueAt(selectedRow, 0);
            if (request.getStatus().equalsIgnoreCase("Completed")) {
                JOptionPane.showMessageDialog(null, "Request Already Processed");
                return;
            } else {
                request.setReceiver(userAccount);
                request.setStatus("With Supplier Team");
                populateOrderTable();
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                userProcessContainer.add("ManageOrderWorkAreaJPanel", new ManageOrderWorkAreaJPanel(userProcessContainer, userAccount, enterprise, business, catDir, request));
                layout.next(userProcessContainer);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Choose a request to process");
            return;
        }
    }//GEN-LAST:event_manageOrderBtnActionPerformed

    public void populateOrderTable() {
        DefaultTableModel model = (DefaultTableModel) supplierWorkRequestJTable.getModel();

        model.setRowCount(0);
        for (WorkRequest request : supplierOrganization.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[8];
            row[0] = request;
            row[1] = request.getQuantity();
            row[2] = request.getPriority();
            row[3] = request.getSender();
            row[4] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[5] = request.getStatus();
            DateFormat dateformat = new SimpleDateFormat("MM/dd/yyyy");
            row[6] = dateformat.format(request.getRequestDate());
            if (request.getResolveDate() != null) {
                row[7] = dateformat.format(request.getResolveDate());
            } else {
                row[7] = "";
            }

            model.addRow(row);
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton manageOrderBtn;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JButton shipOrderBtn;
    private javax.swing.JTable supplierWorkRequestJTable;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}

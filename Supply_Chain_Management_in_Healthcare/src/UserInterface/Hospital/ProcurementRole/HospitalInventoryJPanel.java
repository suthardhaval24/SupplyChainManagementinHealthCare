/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Hospital.ProcurementRole;

import Business.Enterprise.Enterprise;
import Business.Inventory.Catalog;
import Business.Inventory.HospitalInventory;
import Business.Inventory.Category;
import Business.Inventory.Item;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sutha
 */
public class HospitalInventoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form HospitalInventoryJPanel
     */
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private HospitalInventory catDir;
    private WorkRequest workRequest;
    private int flag;

    public HospitalInventoryJPanel(JPanel userProcessContainer, UserAccount account, Enterprise enterprise, HospitalInventory catDir, WorkRequest request, int flag) {
        initComponents();
        this.catDir = catDir;
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.workRequest = request;
        this.flag = flag;
        valueLabel.setText(enterprise.getName());
        nameLabel.setText(userAccount.getUsername());
        populateItems();
        if (flag == 0) {
            addItemBtn.setEnabled(false);
            doctorRequestBtn.setEnabled(true);
        }
        if (flag == 1) {
            addItemBtn.setEnabled(true);
            doctorRequestBtn.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        InventoryJTable = new javax.swing.JTable();
        addItemBtn = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        doctorRequestBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        InventoryJTable.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(204, 204, 204)));
        InventoryJTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        InventoryJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Catalog", "Category", "Item", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        InventoryJTable.setToolTipText("Hospital Inventory");
        InventoryJTable.setRowHeight(25);
        InventoryJTable.setRowMargin(5);
        InventoryJTable.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jScrollPane1.setViewportView(InventoryJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 280, 550, 150));

        addItemBtn.setText("Add Items");
        addItemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemBtnActionPerformed(evt);
            }
        });
        add(addItemBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 450, 110, -1));

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 450, 90, -1));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Hospital/ProcurementRole/images/procurement.png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 80, 190, 200));

        nameLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        nameLabel.setText("<Name Label>");
        add(nameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 330, 380, 30));

        doctorRequestBtn.setText("Send Doctor Items");
        doctorRequestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorRequestBtnActionPerformed(evt);
            }
        });
        add(doctorRequestBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 450, 130, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Hospital Inventory");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 220, 180, -1));

        jPanel1.setBackground(new java.awt.Color(110, 89, 222));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("EnterPrise :");
        jPanel1.add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 120, 30));

        valueLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        valueLabel.setText("<value>");
        jPanel1.add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 320, 30));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1770, 180));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ProcurementWorkAreaJPanel pwjp = (ProcurementWorkAreaJPanel) component;
        pwjp.populateOrderTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void addItemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemBtnActionPerformed
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("AddItemJPanel", new AddItemsJPanel(userProcessContainer, userAccount, enterprise, catDir));
        layout.next(userProcessContainer);
    }//GEN-LAST:event_addItemBtnActionPerformed

    private void doctorRequestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorRequestBtnActionPerformed
        boolean c = true;
        int final_count = 0;
        String dr_catalog = workRequest.getCatalog();
        String dr_category = workRequest.getCategory();
        String dr_item = workRequest.getItem();
        int dr_quantity = workRequest.getQuantity();
        int selectedRow = InventoryJTable.getSelectedRow();
        if (selectedRow >= 0) {
            for (Catalog catalog : catDir.getCatalogDir()) {
                for (Category cateory : catalog.getCategoryDir()) {
                    for (Item item : cateory.getItemDir()) {
                        if (catalog.getCatalogName().equalsIgnoreCase(dr_catalog)
                                && cateory.getCategoryName().equalsIgnoreCase(dr_category)
                                && item.getName().equalsIgnoreCase(dr_item) && c) {
                            if (item.getQuantity() >= dr_quantity) {
                                final_count = item.getQuantity() - dr_quantity;
                                //System.out.println(final_count);
                                item.setQuantity(final_count);
                                workRequest.setStatus("Completed");
                                workRequest.setResolveDate(new Date());
                                c = false;
                                populateItems();
                                JOptionPane.showMessageDialog(null, "Item sent Successfully");
                            } else {
                                JOptionPane.showMessageDialog(null, "Not enough quantity of " + dr_item + ",Request " + dr_quantity + " to supplier");
                                break;
                            }
                        }
                    }
                }

            }
        } else {
            JOptionPane.showMessageDialog(null, "Choose a request to process");
            return;
        }
    }//GEN-LAST:event_doctorRequestBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable InventoryJTable;
    private javax.swing.JButton addItemBtn;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton doctorRequestBtn;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables

    public void populateItems() {
        DefaultTableModel model = (DefaultTableModel) InventoryJTable.getModel();
        model.setRowCount(0);

        for (Catalog catalog : catDir.getCatalogDir()) {
            Object[] row = new Object[4];
            row[0] = catalog.getCatalogName();
            for (Category category : catalog.getCategoryDir()) {
                row[1] = category.getCategoryName();
                for (Item item : category.getItemDir()) {
                    row[2] = item.getName();
                    row[3] = item.getQuantity();
                }
            }
            model.addRow(row);
        }
    }

}

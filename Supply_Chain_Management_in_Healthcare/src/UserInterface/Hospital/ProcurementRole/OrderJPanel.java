/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Hospital.ProcurementRole;

import Business.EcoSystem;
import Business.EmailNotification.SendEmailNotification;
import Business.Enterprise.Enterprise;
import Business.Enterprise.SupplierEnterprise;
import Business.Inventory.Catalog;
import Business.Inventory.HospitalInventory;
import Business.Inventory.Category;
import Business.Inventory.Item;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.SupplierEnterprise.Organization.SupplierOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ProcurementOrderRequest;
import com.itextpdf.text.BaseColor;
import java.awt.CardLayout;
import java.awt.Component;
import javax.mail.MessagingException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;

/**
 *
 * @author sutha
 */
public class OrderJPanel extends javax.swing.JPanel {

    /**
     * Creates new form OrderJPanel
     */
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private HospitalInventory catDir;
    private EcoSystem business;

    public OrderJPanel(JPanel userProcessContainer, UserAccount account, Enterprise enterprise, HospitalInventory catDir, EcoSystem business) {
        initComponents();
        this.catDir = catDir;
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.business = business;
        valueLabel.setText(enterprise.getName());
        nameLabel.setText(userAccount.getUsername());
        emailTxtField.setText(userAccount.getUsername());
        popCatalogComboBox();
        popPriorityComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backJButton = new javax.swing.JButton();
        requestTestJButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        emailTxtField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        quantityTxtField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        catalogComboBox = new javax.swing.JComboBox();
        CategoryComboBox = new javax.swing.JComboBox();
        itemComboBox = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        priorityComboBox = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 470, 100, -1));
       

        requestTestJButton.setText("Request order");
        requestTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTestJButtonActionPerformed(evt);
            }
        });
        add(requestTestJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(291, 470, 110, -1));
        jLabel3.setText("Catalog");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 220, -1, -1));

        jLabel1.setText("Category");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 260, -1, -1));

        jLabel4.setText("Item");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 300, -1, -1));

        jLabel2.setText("Email ID");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 430, -1, -1));
        add(emailTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 420, 140, -1));

        jLabel6.setText("Quantity");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 380, -1, -1));

        quantityTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityTxtFieldActionPerformed(evt);
            }
        });
        add(quantityTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 380, 140, -1));
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Hospital/ProcurementRole/images/procurement.png"))); // NOI18N
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 80, 200, 200));
        nameLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        nameLabel.setText("<Name Label>");
        add(nameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 320, 400, 30));

        catalogComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        catalogComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                catalogComboBoxActionPerformed(evt);
            }
        });
        add(catalogComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 220, 90, -1));

        CategoryComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(CategoryComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 260, 90, -1));

        itemComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(itemComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 300, 90, -1));

        jLabel7.setText("Priority");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 340, -1, -1));

        priorityComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        priorityComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priorityComboBoxActionPerformed(evt);
            }
        });
        add(priorityComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 340, 90, -1));

        jPanel1.setBackground(new java.awt.Color(110, 89, 222));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("EnterPrise :");
        jPanel1.add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, 120, 30));

        valueLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        valueLabel.setText("<value>");
        jPanel1.add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 110, 320, 30));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1770, 180));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ManageOrderJPanel mojp = (ManageOrderJPanel) component;
        mojp.populateProcurementOrders();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void requestTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTestJButtonActionPerformed

        if (quantityTxtField.getText().isEmpty() == true) {
            JOptionPane.showMessageDialog(null, "Please fill all the details");
        } else {
            try {
                String catalog = (String) catalogComboBox.getSelectedItem();
                String catagory = (String) CategoryComboBox.getSelectedItem();
                String Item = (String) itemComboBox.getSelectedItem();
                String priority = (String) priorityComboBox.getSelectedItem();
                int quantity = Integer.parseInt(quantityTxtField.getText());

                ProcurementOrderRequest request = new ProcurementOrderRequest();
                request.setCatalog(catalog);
                request.setCategory(catagory);
                request.setItem(Item);
                request.setPriority(priority);
                request.setQuantity(quantity);
                request.setSender(userAccount);
                request.setStatus("Request Initiated");
                request.setRequestDate(new Date());
                SendEmailNotification sentEmail = new SendEmailNotification();
                try {
                    sentEmail.sendEmail(userAccount.getUsername(), request);
                } catch (MessagingException ex) {
                    Logger.getLogger(OrderJPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    Document doc = new Document();
                    PdfWriter writer = null;
                    try {
                        writer = PdfWriter.getInstance(doc, new FileOutputStream("Report.pdf"));
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(OrderJPanel.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    doc.open();
                    PdfPTable table = new PdfPTable(2);
                    table.addCell("Catalog");
                    table.addCell(catalog);
                    table.addCell("Category");
                    table.addCell(catagory);
                    table.addCell("Item");
                    table.addCell(Item);
                    table.addCell("Quantity");
                    table.addCell(quantityTxtField.getText());
                    Paragraph para = new Paragraph("Order Placed to Supplier");

                    para.setAlignment(Paragraph.ALIGN_CENTER);
                    para.setSpacingAfter(100);
                    doc.add(para);
                    //  para.setSpacingAfter(1);
                    doc.add(table);
                    para.setSpacingAfter(100);
                    //  doc.add("Thank You for ordering!");
                    FontFactory.getFont(FontFactory.HELVETICA, Font.DEFAULTSIZE, Font.BOLD);
                    doc.close();
                } catch (DocumentException ex) {
                    Logger.getLogger(OrderJPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
                Organization org = null;
                for (Network n : business.getNetworkList()) {
                    for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                        if (e instanceof SupplierEnterprise) {
                            for (Organization organization : e.getOrganizationDirectory().getOrganizationList()) {
                                if (organization instanceof SupplierOrganization) {
                                    org = organization;
                                    break;
                                }
                            }
                        }
                    }
                }

                if (org != null) {
                    org.getWorkQueue().getWorkRequestList().add(request);
                    userAccount.getWorkQueue().getWorkRequestList().add(request);
                    JOptionPane.showMessageDialog(null, "Order succesfully sent to Supplier");
                }

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Please Enter Details in correct format");
                return;
            }
        }
        catalogComboBox.setEnabled(false);
        CategoryComboBox.setEnabled(false);
        itemComboBox.setEnabled(false);
        priorityComboBox.setEnabled(false);
        requestTestJButton.setEnabled(false);
        quantityTxtField.setEditable(false);
        emailTxtField.setEditable(false);

    }//GEN-LAST:event_requestTestJButtonActionPerformed

    public void colorRectangle(PdfContentByte canvas, BaseColor color, float x, float y, float width, float height) {
        canvas.saveState();
        canvas.setColorFill(color);
        canvas.rectangle(x, y, width, height);
        canvas.fillStroke();
        canvas.restoreState();
    }

    private void catalogComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catalogComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_catalogComboBoxActionPerformed

    private void quantityTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityTxtFieldActionPerformed

    private void priorityComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priorityComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priorityComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox CategoryComboBox;
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox catalogComboBox;
    private javax.swing.JTextField emailTxtField;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JComboBox itemComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JComboBox priorityComboBox;
    private javax.swing.JTextField quantityTxtField;
    private javax.swing.JButton requestTestJButton;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
    private void popCatalogComboBox() {
        catalogComboBox.removeAllItems();
        CategoryComboBox.removeAllItems();
        itemComboBox.removeAllItems();
        for (Catalog catalog : catDir.getCatalogDir()) {
            catalogComboBox.addItem(catalog.getCatalogName());
            popCategory(catalog);
        }
    }

    private void popCategory(Catalog catlog) {
        for (Category category : catlog.getCategoryDir()) {
            CategoryComboBox.addItem(category.getCategoryName());
            popItem(category);
        }
    }

    private void popItem(Category category) {
        for (Item item : category.getItemDir()) {
            itemComboBox.addItem(item.getName());
        }
    }

    private void popPriorityComboBox() {
        priorityComboBox.removeAllItems();
        priorityComboBox.addItem("Low");
        priorityComboBox.addItem("Medium");
        priorityComboBox.addItem("High");
    }

}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Hospital.ProcurementRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.HospitalEnterprise.Organization.ProcurementOrganization;
import Business.Inventory.HospitalInventory;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javafx.scene.paint.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;


/**
 *
 * @author sutha
 */
public class ProcurementWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProcurementAreaJPanel
     */
    
    private JPanel userProcessContainer;
    private ProcurementOrganization procurementOrganization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private HospitalInventory catDir;
    private EcoSystem business;
    private WorkRequest request;

    public ProcurementWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, ProcurementOrganization organization, Enterprise enterprise,EcoSystem business, HospitalInventory catDir) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.procurementOrganization = (ProcurementOrganization) organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.catDir = catDir;
        this.business = business;
        valueLabel.setText(enterprise.getName());
        nameLabel.setText(userAccount.getUsername());
        populateOrderTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        nameLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        refreshTestJButton = new javax.swing.JButton();
        assignMe = new javax.swing.JButton();
        orderBtn = new javax.swing.JButton();
        manageInventoryBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        orderAnalysisGraph = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestJTable.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(204, 204, 204)));
        workRequestJTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Quantity", "Priority", "Sender", "Receiver", "Status", "Request Date", "Resolve Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        workRequestJTable.setRowHeight(25);
        workRequestJTable.setRowMargin(5);
        workRequestJTable.setSelectionBackground(new java.awt.Color(110, 89, 222));
        jScrollPane1.setViewportView(workRequestJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 290, 970, 97));

        nameLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        nameLabel.setText("<Name Label>");
        add(nameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 320, 370, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Hospital/ProcurementRole/images/procurement.png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 80, 210, 200));

        refreshTestJButton.setText("Refresh");
        refreshTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButtonActionPerformed(evt);
            }
        });
        add(refreshTestJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 230, 160, -1));

        assignMe.setText("Assign me and Process Request");
        assignMe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignMeActionPerformed(evt);
            }
        });
        add(assignMe, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 420, 230, -1));

        orderBtn.setText("Order Item");
        orderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderBtnActionPerformed(evt);
            }
        });
        add(orderBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 420, 140, -1));

        manageInventoryBtn.setText("Manage Inventory");
        manageInventoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageInventoryBtnActionPerformed(evt);
            }
        });
        add(manageInventoryBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 420, 230, -1));

        jPanel1.setBackground(new java.awt.Color(110, 89, 222));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("EnterPrise :");
        jPanel1.add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 127, 30));

        valueLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        valueLabel.setText("<value>");
        jPanel1.add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, 320, 30));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1770, 180));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Procurement Order Request Status");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 230, -1, -1));

        orderAnalysisGraph.setText("Show Order Graph");
        orderAnalysisGraph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderAnalysisGraphActionPerformed(evt);
            }
        });
        add(orderAnalysisGraph, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 420, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void refreshTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButtonActionPerformed

        populateOrderTable();
    }//GEN-LAST:event_refreshTestJButtonActionPerformed

    private void orderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderBtnActionPerformed
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("ManageOrderJPanel", new ManageOrderJPanel(userProcessContainer, userAccount, enterprise, catDir,business));
        layout.next(userProcessContainer);
    }//GEN-LAST:event_orderBtnActionPerformed

    private void manageInventoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageInventoryBtnActionPerformed
        int flag=1;
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("HospitalInventoryJPanel", new HospitalInventoryJPanel(userProcessContainer, userAccount, enterprise, catDir,request,flag));
        layout.next(userProcessContainer);
    }//GEN-LAST:event_manageInventoryBtnActionPerformed

    private void assignMeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignMeActionPerformed
        int flag=0;
        int selectedRow = workRequestJTable.getSelectedRow();
        if (selectedRow >= 0) {
            request = (WorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
            if (request.getStatus().equalsIgnoreCase("Completed")) {
                JOptionPane.showMessageDialog(null, "Request Already Processed");
                return;
            } else {
                request.setReceiver(userAccount);
                request.setStatus("With Procurement Team");
                populateOrderTable();
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                userProcessContainer.add("HospitalInventoryJPanel", new HospitalInventoryJPanel(userProcessContainer, userAccount, enterprise, catDir, request,flag));
                layout.next(userProcessContainer);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Choose a request to process");
            return;
        }
    }//GEN-LAST:event_assignMeActionPerformed

    private void orderAnalysisGraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderAnalysisGraphActionPerformed
        // TODO add your handling code here:
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for (WorkRequest request : procurementOrganization.getWorkQueue().getWorkRequestList()) {
            dataset.setValue(request.getQuantity(), "Items", request.getItem());
        }
        JFreeChart chart = ChartFactory.createBarChart3D("Items vs Quantity ordered", "Items", "Quantities", dataset, PlotOrientation.VERTICAL, true, true, true);
        //chart.setBackgroundPaint(olor.YELLOW);
        //chart.getTitle().setPaint(Color.RED);
        CategoryPlot p = chart.getCategoryPlot();
        ChartFrame frame = new ChartFrame("Bar chart for quantity of items ordered by the procurement team", chart);
        frame.setVisible(true);
        frame.setSize(450,300);

    }//GEN-LAST:event_orderAnalysisGraphActionPerformed

      public void populateOrderTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();

        model.setRowCount(0);
        for (WorkRequest request : procurementOrganization.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[8];
            row[0] = request;
            row[1] = request.getQuantity();
            row[2] = request.getPriority();
            row[3] = request.getSender();
            row[4] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[5] = request.getStatus();
            DateFormat dateformat = new SimpleDateFormat("MM/dd/yyyy");
            row[6] = dateformat.format(request.getRequestDate());
            if (request.getResolveDate() != null) {
                row[7] = dateformat.format(request.getResolveDate());
            } else {
                row[7] = "";
            }

            model.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignMe;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton manageInventoryBtn;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JButton orderAnalysisGraph;
    private javax.swing.JButton orderBtn;
    private javax.swing.JButton refreshTestJButton;
    private javax.swing.JLabel valueLabel;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
